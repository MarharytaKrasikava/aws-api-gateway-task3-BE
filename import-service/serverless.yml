service: import-service

plugins:
  - serverless-bundle
  - serverless-offline

custom:
  client:
    bucketName: uploaded-product-files
  bundle:
    ignorePackages:
      - pg-native

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  stage: dev
  httpApi:
    cors:
      allowedOrigins:
        - https://dv0irgcfxah3p.cloudfront.net
      allowedHeaders:
        - Content-Type
        - Authorization
      allowedMethods:
        - GET
        - POST
        - PUT
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
          Resource: arn:aws:s3:::${self:custom.client.bucketName}
        - Effect: Allow
          Action:
            - s3:*
          Resource: arn:aws:s3:::${self:custom.client.bucketName}/*
        - Effect: Allow
          Action: sqs:*
          Resource:
            - Fn::GetAtt: [SQSQueue, Arn]
  environment:
    SQS_URL:
      Ref: SQSQueue
resources:
  Resources:
    SQSQueue:
      Type: 'AWS::SQS::Queue'
      Properties:
        QueueName: sqs-products-queue

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - httpApi:
          method: get
          path: /dev/import
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: ${self:custom.client.bucketName}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn
